{
  "id": 1,
  "title": "Redux란 무엇인가?",
  "content": "# 1. Redux란? \n Redux는 **JavaScript 애플리케이션에서 상태 관리를 위한 도구**입니다. React와 함께 사용되는 것이 일반적이며, React의 컴포넌트에서 상태를 관리하는 것보다 더욱 복잡한 애플리케이션에서 유용합니다.\n\nRedux는 애플리케이션의 상태를 `store`라는 단일 객체에 저장합니다. 이 `store`는 애플리케이션 전체에서 접근 가능하며, 상태를 업데이트하는 것은 순수 함수인 리듀서(reducer)를 통해서만 가능합니다. 이를 통해 상태 변화를 예측 가능하고 테스트하기 쉬워집니다.\n\n # 2. Redux의 세 가지 원칙 \n\n Redux는 다음과 같은 세 가지 원칙에 기반합니다.\n\n1. 단일 소스 출처(Single Source of Truth)\n2. 상태는 읽기 전용(States are read-only)\n3. 변화는 순수 함수(Pure Functions)로 작성되어야 합니다.\n\nRedux는 다음과 같은 구조로 이루어져 있습니다.\n\n1. 액션(Action)\n2. 리듀서(Reducer)\n3. 스토어(Store)\n4. 디스패치(Dispatch)\n5. 구독(Subscribe)\n\nRedux는 상태 관리를 위한 강력한 도구이며, React와 함께 사용하면 더욱 효율적인 개발이 가능해집니다. 하지만 초기 설정이 복잡하고 작은 규모의 애플리케이션에서는 추가 노력이 필요할 수 있으니, 상황에 맞게 사용해야 합니다. \n #3. Redux의구조 \n\n Redux는 다음과 같은 구조로 이루어져 있습니다.\n\n### 1. 액션(Action)\n\nRedux에서 액션은 상태 변화를 일으키는 객체입니다. 액션은 type이라는 필수적인 속성을 가지며, 필요에 따라 payload와 같은 추가 속성을 가질 수 있습니다.\n\n```javascript\n{\n  type: 'ADD_TODO',\n  payload: {\n    id: 1,\n    text: 'Write a blog post',\n    completed: false\n  }\n}\n```\n\n### 2. 리듀서(Reducer)\n\n리듀서는 이전 상태와 액션 객체를 받아서 새로운 상태를 반환하는 함수입니다. 이전 상태와 액션 객체를 바탕으로 새로운 상태를 만들어내는 함수이기 때문에 상태를 직접 수정하지 않고, 새로운 상태를 반환하는 순수 함수(pure function)여야 합니다.\n\n```javascript\nfunction todosReducer(state = [], action) {\n  switch (action.type) {\n    case 'ADD_TODO':\n      return [...state, action.payload];\n    case 'TOGGLE_TODO':\n      return state.map(todo =>\n        todo.id === action.payload ? { ...todo, completed: !todo.completed } : todo\n      );\n    default:\n      return state;\n  }\n}\n```\n\n### 3. 스토어(Store)\n\nRedux의 상태는 스토어라는 객체에 저장됩니다. 스토어는 상태를 가져오고 업데이트하기 위한 메서드를 제공합니다. 스토어를 생성할 때는 리듀서 함수를 전달해야 합니다.\n\n```javascript\nimport { createStore } from 'redux';\n\nconst store = createStore(todosReducer);\n```\n\n### 4. 디스패치(Dispatch)\n\n디스패치는 액션을 스토어에 전달하는 메서드입니다. 디스패치를 통해 액션을 전달하면 스토어는 리듀서를 호출하여 새로운 상태를 생성합니다.\n\n```javascript\nstore.dispatch({\n  type: 'ADD_TODO',\n  payload: {\n    id: 1,\n    text: 'Write a blog post',\n    completed: false\n  }\n});\n```\n\n### 5. 구독(Subscribe)\n\n구독은 스토어의 상태가 변경될 때마다 호출되는 콜백 함수를 등록하는 메서드입니다. 이를 통해 상태 변경에 따른 UI 업데이트 등을 처리할 수 있습니다."
}
